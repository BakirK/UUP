{
    "buildhost_description": {
        "id": "lab002c01",
        "os": "Linux 2.6.32-754.2.1.el6.x86_64 x86_64\n\"CentOS release 6.10 (Final)\"\n",
        "compiler_version": "gcc (GCC) 6.2.0",
        "debugger_version": "GNU gdb (GDB) 7.12",
        "profiler_version": "valgrind-3.12.0"
    },
    "status": 4,
    "compile_result": {
        "status": 1,
        "output": "main.c: In function ‘max_slovo’:\nmain.c:41:14: warning: ‘index’ may be used uninitialized in this function [-Wmaybe-uninitialized]\n  return index+65;\n         ~~~~~^~~",
        "parsed_output": [
            {
                "type": "warning",
                "file": "main.c",
                "line": "41",
                "col": "14",
                "message": "'index' may be used uninitialized in this function",
                "output": "/tmp/buildservice/bs_6656/main.c:41:14: warning: ‘index’ may be used uninitialized in this function [-Wmaybe-uninitialized]  return index+65;         ~~~~~^~~",
                "code": "return index+65;"
            }
        ]
    },
    "run_result": [],
    "debug_result": [],
    "profile_result": [],
    "test_results": {
        "1322": {
            "status": 6,
            "run_result": {
                "output": "C\n",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": {
                "output": "==8939== Memcheck, a memory error detector\n==8939== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==8939== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info\n==8939== Command: bs_test_1322\n==8939== Parent PID: 8938\n==8939== \n==8939== Conditional jump or move depends on uninitialised value(s)\n==8939==    at 0x400655: max_slovo (bs_test_1322.c:32)\n==8939==    by 0x4006E9: main (bs_test_1322.c:54)\n==8939== \n==8939== Conditional jump or move depends on uninitialised value(s)\n==8939==    at 0x400682: max_slovo (bs_test_1322.c:37)\n==8939==    by 0x4006E9: main (bs_test_1322.c:54)\n==8939== \n==8939== \n==8939== HEAP SUMMARY:\n==8939==     in use at exit: 0 bytes in 0 blocks\n==8939==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated\n==8939== \n==8939== All heap blocks were freed -- no leaks are possible\n==8939== \n==8939== For counts of detected and suppressed errors, rerun with: -v\n==8939== Use --track-origins=yes to see where uninitialised values come from\n==8939== ERROR SUMMARY: 28 errors from 2 contexts (suppressed: 4 from 4)\n",
                "status": 3,
                "parsed_output": [
                    {
                        "type": 3,
                        "output": " Conditional jump or move depends on uninitialised value(s)\n    at 0x400655: max_slovo (bs_test_1322.c:32)\n    by 0x4006E9: main (bs_test_1322.c:54)\n",
                        "file": "main.c",
                        "line": 30
                    },
                    {
                        "type": 3,
                        "output": " Conditional jump or move depends on uninitialised value(s)\n    at 0x400682: max_slovo (bs_test_1322.c:37)\n    by 0x4006E9: main (bs_test_1322.c:54)\n",
                        "file": "main.c",
                        "line": 35
                    }
                ]
            },
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "1323": {
            "status": 6,
            "run_result": {
                "output": "C\n",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": {
                "output": "==8957== Memcheck, a memory error detector\n==8957== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==8957== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info\n==8957== Command: bs_test_1323\n==8957== Parent PID: 8956\n==8957== \n==8957== Conditional jump or move depends on uninitialised value(s)\n==8957==    at 0x400655: max_slovo (bs_test_1323.c:32)\n==8957==    by 0x4006E9: main (bs_test_1323.c:54)\n==8957== \n==8957== Conditional jump or move depends on uninitialised value(s)\n==8957==    at 0x400682: max_slovo (bs_test_1323.c:37)\n==8957==    by 0x4006E9: main (bs_test_1323.c:54)\n==8957== \n==8957== \n==8957== HEAP SUMMARY:\n==8957==     in use at exit: 0 bytes in 0 blocks\n==8957==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated\n==8957== \n==8957== All heap blocks were freed -- no leaks are possible\n==8957== \n==8957== For counts of detected and suppressed errors, rerun with: -v\n==8957== Use --track-origins=yes to see where uninitialised values come from\n==8957== ERROR SUMMARY: 28 errors from 2 contexts (suppressed: 4 from 4)\n",
                "status": 3,
                "parsed_output": [
                    {
                        "type": 3,
                        "output": " Conditional jump or move depends on uninitialised value(s)\n    at 0x400655: max_slovo (bs_test_1323.c:32)\n    by 0x4006E9: main (bs_test_1323.c:54)\n",
                        "file": "main.c",
                        "line": 30
                    },
                    {
                        "type": 3,
                        "output": " Conditional jump or move depends on uninitialised value(s)\n    at 0x400682: max_slovo (bs_test_1323.c:37)\n    by 0x4006E9: main (bs_test_1323.c:54)\n",
                        "file": "main.c",
                        "line": 35
                    }
                ]
            },
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "1324": {
            "status": 6,
            "run_result": {
                "output": "C",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": {
                "output": "==8975== Memcheck, a memory error detector\n==8975== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==8975== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info\n==8975== Command: bs_test_1324\n==8975== Parent PID: 8974\n==8975== \n==8975== Conditional jump or move depends on uninitialised value(s)\n==8975==    at 0x4006A5: max_slovo (bs_test_1324.c:32)\n==8975==    by 0x400739: main (bs_test_1324.c:55)\n==8975== \n==8975== Conditional jump or move depends on uninitialised value(s)\n==8975==    at 0x4006D2: max_slovo (bs_test_1324.c:37)\n==8975==    by 0x400739: main (bs_test_1324.c:55)\n==8975== \n==8975== Conditional jump or move depends on uninitialised value(s)\n==8975==    at 0x4006A5: max_slovo (bs_test_1324.c:32)\n==8975==    by 0x400743: main (bs_test_1324.c:56)\n==8975== \n==8975== Conditional jump or move depends on uninitialised value(s)\n==8975==    at 0x4006D2: max_slovo (bs_test_1324.c:37)\n==8975==    by 0x400743: main (bs_test_1324.c:56)\n==8975== \n==8975== Conditional jump or move depends on uninitialised value(s)\n==8975==    at 0x4006A5: max_slovo (bs_test_1324.c:32)\n==8975==    by 0x40074D: main (bs_test_1324.c:57)\n==8975== \n==8975== Conditional jump or move depends on uninitialised value(s)\n==8975==    at 0x4006D2: max_slovo (bs_test_1324.c:37)\n==8975==    by 0x40074D: main (bs_test_1324.c:57)\n==8975== \n==8975== Conditional jump or move depends on uninitialised value(s)\n==8975==    at 0x4006A5: max_slovo (bs_test_1324.c:32)\n==8975==    by 0x400757: main (bs_test_1324.c:58)\n==8975== \n==8975== Conditional jump or move depends on uninitialised value(s)\n==8975==    at 0x4006D2: max_slovo (bs_test_1324.c:37)\n==8975==    by 0x400757: main (bs_test_1324.c:58)\n==8975== \n==8975== \n==8975== HEAP SUMMARY:\n==8975==     in use at exit: 0 bytes in 0 blocks\n==8975==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated\n==8975== \n==8975== All heap blocks were freed -- no leaks are possible\n==8975== \n==8975== For counts of detected and suppressed errors, rerun with: -v\n==8975== Use --track-origins=yes to see where uninitialised values come from\n==8975== ERROR SUMMARY: 112 errors from 8 contexts (suppressed: 4 from 4)\n",
                "status": 3,
                "parsed_output": [
                    {
                        "type": 3,
                        "output": " Conditional jump or move depends on uninitialised value(s)\n    at 0x4006A5: max_slovo (bs_test_1324.c:32)\n    by 0x400739: main (bs_test_1324.c:55)\n",
                        "file": "main.c",
                        "line": 30
                    },
                    {
                        "type": 3,
                        "output": " Conditional jump or move depends on uninitialised value(s)\n    at 0x4006D2: max_slovo (bs_test_1324.c:37)\n    by 0x400739: main (bs_test_1324.c:55)\n",
                        "file": "main.c",
                        "line": 35
                    }
                ]
            },
            "compile_result": {
                "status": 1,
                "output": ""
            }
        }
    },
    "queue_items": 1,
    "time": 1544822458
}